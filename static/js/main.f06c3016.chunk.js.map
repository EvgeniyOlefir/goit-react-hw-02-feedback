{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","bold","positive","Section","title","children","Notification","message","notification","App","state","addFeedback","prop","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","container","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,sD,oBCA7DD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,+B,gBCAxGD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,yB,qKCCf,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAEEC,UAAWC,IAAEF,GACbG,KAAK,SACLC,QAAS,kBAAMN,EAAgBE,IAJjC,SAMGA,GALIA,Q,oBCNF,SAASK,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,8BACE,sBAAMP,UAAWC,IAAES,KAAnB,qBACCF,KAEH,8BACE,sBAAMR,UAAWC,IAAEU,SAAnB,iCACCF,EAFH,U,oBCTSG,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,oBAAId,UAAWC,IAAEY,MAAjB,SAAyBA,IACxBC,M,iBCCUC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGhB,UAAWC,IAAEgB,aAAhB,SAA+BD,K,iBC0DlBE,E,4MArDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAOE,EAAUF,GAAQ,O,EAIvCG,mBAAqB,WACnB,IAAMhB,EAAQ,EAAKW,MACnB,OAAOM,OAAOC,OAAOlB,GAAOmB,QAAO,SAACC,EAAKpB,GAAN,OAAgBoB,EAAMpB,IAAO,I,EAGlEqB,gCAAkC,WAAO,IAC/BxB,EAAS,EAAKc,MAAdd,KACFG,EAAQ,EAAKgB,qBACnB,OAAgB,IAATnB,EAAa,EAAIyB,KAAKC,MAAO1B,EAAOG,EAAS,M,4CAGtD,WAAU,IAAD,EACwBwB,KAAKb,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBX,EAAU6B,OAAOQ,KAAKD,KAAKb,OAC3BX,EAAQwB,KAAKR,qBACnB,OACE,sBAAKxB,UAAWC,IAAEiC,UAAlB,UACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACE,cAAClB,EAAD,CACEC,QAASA,EACTC,gBAAiBmC,KAAKZ,gBAGf,IAAVZ,EACC,cAAC,EAAD,CAASK,MAAM,aAAf,SACE,cAACT,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBuB,KAAKH,sCAI7B,cAAC,EAAD,CAAcb,QAAQ,8B,GA/CdmB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f06c3016.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"Statistics_bold__2yDD8\",\"positive\":\"Statistics_positive__ezLz_ Statistics_bold__2yDD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"FeedbackOptions_good__3WHVe\",\"neutral\":\"FeedbackOptions_neutral__1NCV1\",\"bad\":\"FeedbackOptions_bad__sG-2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__s91Xy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2rUlj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3D2XA\"};","import s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            className={s[option]}\n            type=\"button\"\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </>\n  );\n}\n","import s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>\n        <span className={s.bold}>Total: </span>\n        {total}\n      </p>\n      <p>\n        <span className={s.positive}>Positive feedback: </span>\n        {positivePercentage}%\n      </p>\n    </div>\n  );\n}\n","import s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </>\n);\n\nexport default Section;\n","import s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = prop => {\n    this.setState(prevState => {\n      return { [prop]: prevState[prop] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state;\n    return Object.values(total).reduce((acc, total) => acc + total, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return good === 0 ? 0 : Math.round((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        {total !== 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given.\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}